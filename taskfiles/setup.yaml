version: '3'

vars:
  PY_VERSION: 3.10.4

tasks:
  install-pyenv:
    desc: "ensure pyenv is installed"
    cmds:
      - brew update && brew install pyenv
      - echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.zshrc
      - echo 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.zshrc
      - echo 'eval "$(pyenv init -)"' >> ~/.zshrc
    status:
      - command -v pyenv &> /dev/null
  install-py-version:
    desc: "making sure the correct version of python is installed"
    cmds:
      - pyenv install {{.PY_VERSION}}
    status:
      - pyenv versions | grep {{.PY_VERSION}}
  set-py-version:
    desc: "set pyenv python version"
    cmds:
      - pyenv local {{.PY_VERSION}}
    status:
      - "[[ $(cat .python-version) == {{.PY_VERSION}} ]]"
  create-venv:
    desc: "create a venv"
    cmds:
      - python -m venv venv
      - source venv/bin/activate && python -m pip install -U pip
      - source venv/bin/activate && python -m pip install pip-tools
    status:
      - test -d venv
      - command -v pip-compile &> /dev/null
  sync-venv:
    desc: "setup venv"
    cmds:
      - source venv/bin/activate && pip-compile requirements-dev.in requirements.in --output-file requirements-dev.txt
      - source venv/bin/activate && pip-sync requirements-dev.txt
    sources:
      - requirements*
  install-git-hooks:
    desc: "setup git pre-commit hook"
    cmds:
      - cp git_hooks/pre-commit .git/hooks/pre-commit
      - chmod +x .git/hooks/pre-commit
    sources:
      - git_hooks/
    generates:
      - .git/hooks/
  copy-env-template:
    desc: "create .env file from template"
    cmds:
      - cp -n .env.template .env
    status:
      - test -f .env
  all:
    desc: "setup entire repo"
    cmds:
      - task: install-pyenv
      - task: install-py-version
      - task: set-py-version
      - task: create-venv
      - task: sync-venv
      - task: install-git-hooks
      - task: copy-env-template